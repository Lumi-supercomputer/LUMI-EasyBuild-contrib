# provided by mkra (CSCS), 2018
# Adapted by Kurt Lust (kurt.lust@uantwerpen.be) for the LUMI consortium
easyblock = 'EB_SCOTCH_CPE'

local_SCOTCH7_version =      '7.0.3'         # https://gforge.inria.fr/projects/scotch/

local_bzip2_version =        '1.0.8'         # http://www.bzip.org/downloads.html
local_XZ_version =           '5.4.2'         # https://tukaani.org/xz/
local_zlib_version =         '1.2.12'        # https://zlib.net/

name =    'SCOTCH'
version = local_SCOTCH7_version
versionsuffix = '-int64'

homepage = 'https://www.labri.fr/perso/pelegrin/scotch/'

whatis = [
    'Description: Scotch is a software package for graph and mesh/hypergraph partitioning, graph clustering, and sparse matrix ordering'
]

description = """
Scotch is a software package and libraries for sequential and parallel graph
partitioning, static mapping, and sparse matrix block ordering, and sequential
mesh and hypergraph partitioning.

The module provides static libraries only. The library is compiled with support
for GZ-, BZ2- and LZMA-compressed graph files.


LICENSE
=======
SCOTCH is licensed under the CeCILL-C Free Software License Agreement, see
https://cecill.info/licences/Licence_CeCILL-C_V1-en.html.
"""

software_license_urls = ['https://cecill.info/licences/Licence_CeCILL-C_V1-en.html']


toolchain = {'name': 'cpeGNU', 'version': '22.12'}
toolchainopts = {'pic': True, 'i8': True}

sources = [
    {   # https://gitlab.inria.fr/scotch/scotch/-/archive/v6.1.2/scotch-v6.1.3.tar.gz
        'filename': '%(namelower)s_v%(version)s.tar.gz',
        'source_urls': ['https://gitlab.inria.fr/scotch/scotch/-/archive/v%(version)s/'],
        'extract_cmd': 'tar xvf %s ; mv scotch-v%(version)s* scotch-%(version)s'
    },
    {
        'filename': 'Makefile.inc.CPE.%(version)s',
        'extract_cmd': 'cp %s scotch-%(version)s/src/Make.inc/Makefile.inc.CPE',
    },
]
#checksums =   [
#    '0618e9bc33c02172ea7351600fce4fccd32fe00b3359c4aabb5e415f17c06fed' # scotch_v7.1.3.tar.gz
#]

builddependencies = [ # Create a reproducible build environment.
    ('buildtools',   '%(toolchain_version)s',   '', True), # For CMake
]

dependencies = [
    ('bzip2', local_bzip2_version),
    ('XZ',    local_XZ_version),
    ('zlib',  local_zlib_version),
]

moduleclass = 'math'
