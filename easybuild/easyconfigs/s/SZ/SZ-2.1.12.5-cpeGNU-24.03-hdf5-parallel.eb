# Based on a easyconfig by the Juelich Supercomputing Centre
# Adapted for LUMI by Orian Louant
#
# DOC This version uses the `cray-hdf5-parallel` and `cray-netcdf-hdf5parallel` modules.

easyblock = "CMakeMake"

local_zlib_version = "1.3.1"  # https://zlib.net/
local_SZ_version = "2.1.12.5"  # https://github.com/szcompressor/SZ2/releases

name = "SZ"
version = local_SZ_version
versionsuffix = "-hdf5-parallel"

homepage = "https://szcompressor.org"

whatis = [
    "SZ is a modular parametrizable lossy compressor framework for scientific data"
]

description = """
 SZ is a modular parametrizable lossy compressor framework for scientific data
 (floating point and integers). It has applications in simulations, AI and
 instruments. It is a production quality software and a research platform for
 lossy compression.
 
 SZ can be used for classic use-cases: visualization, accelerating I/O,
 reducing memory and storage footprint and more advanced use-cases like
 compression of DNN models and training sets, acceleration of computation,
 checkpoint/restart, reducing streaming intensity and running efficiently large
 problems that cannot fit in memory. Other use-cases will augment this list as
 users find new opportunities to benefit from lossy compression of scientific
 data.
"""

software_license_urls = [
    "https://github.com/szcompressor/SZ2/blob/master/copyright-and-BSD-license.txt"
]

toolchain = {"name": "cpeGNU", "version": "24.03"}
toolchainopts = {"pic": True}

github_account = "szcompressor"
source_urls = ["https://github.com/szcompressor/SZ2/releases/download/v%(version)s"]
sources = ["SZ-%(version)s.tar.gz"]
checksums = ["32a820daf6019156a777300389d2392e4498a5c9daffce7be754cd0a5ba8729c"]

builddependencies = [
    ("buildtools", "%(toolchain_version)s", "", True),
    ("craype-accel-host", EXTERNAL_MODULE),
]

dependencies = [
    ("zlib", local_zlib_version),
    ("cray-hdf5-parallel", EXTERNAL_MODULE),
    ("cray-netcdf-hdf5parallel", EXTERNAL_MODULE),
]

preconfigopts = "module rm rocm cray-libsci && "
prebuildopts = preconfigopts

preconfigopts += (
    " && ".join(
        [
            "export PKG_CONFIG_PATH=$CRAY_MPICH_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH",
            "; ".join(
                [
                    "pushd %(builddir)s/SZ-%(version)s/NetCDFReader",
                    'sed -i "s/IMPORTED_TARGET netcdf/IMPORTED_TARGET netcdf_parallel/" CMakeLists.txt',
                    "popd",
                ]
            ),
        ]
    )
    + " && "
)

configopts = " ".join(
    [
        "-DBUILD_FORTRAN=ON",
        "-DBUILD_HDF5_FILTER=ON",
        "-DBUILD_NETCDF_READER=ON",
        "-DBUILD_OPENMP=ON",
    ]
)

postinstallcmds = [
    "mkdir -p %(installdir)s/share/licenses/%(name)s",
    "cd ../%(name)s-%(version)s && cp copyright-and-BSD-license.txt %(installdir)s/share/licenses/%(name)s",
]

sanity_check_paths = {
    "files": ["lib/libSZ.%s" % SHLIB_EXT],
    "dirs": ["include", "lib"],
}

moduleclass = "data"
