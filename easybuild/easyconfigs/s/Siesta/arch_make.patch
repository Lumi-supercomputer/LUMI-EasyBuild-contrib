diff -Naur siesta/Obj/arch.make siesta-4.1.5/Obj/arch.make
--- siesta/Obj/arch.make	1970-01-01 02:00:00.000000000 +0200
+++ siesta-4.1.5/Obj/arch.make	2023-12-08 16:36:17.000000000 +0200
@@ -0,0 +1,77 @@
+# 
+# Copyright (C) 1996-2016	The SIESTA group
+#  This file is distributed under the terms of the
+#  GNU General Public License: see COPYING in the top directory
+#  or http://www.gnu.org/copyleft/gpl.txt.
+# See Docs/Contributors.txt for a list of contributors.
+#
+#-------------------------------------------------------------------
+# arch.make file for gfortran compiler.
+# To use this arch.make file you should rename it to
+#   arch.make
+# or make a sym-link.
+# For an explanation of the flags see DOCUMENTED-TEMPLATE.make
+
+.SUFFIXES:
+.SUFFIXES: .f .F .o .c .a .f90 .F90
+
+SIESTA_ARCH = lumi
+
+CC = cc
+FPP = $(FC) -E -P -x c
+FC = ftn
+FC_SERIAL = gfortran
+
+FFLAGS = -g -O2 -fPIC -ftree-vectorize -mno-recip -fallow-argument-mismatch
+
+CFLAGS = -g -O2 -fPIC
+
+AR = ar
+RANLIB = ranlib
+
+SYS = nag
+
+SP_KIND = 4
+DP_KIND = 8
+KINDS = $(SP_KIND) $(DP_KIND)
+
+LDFLAGS = -g
+
+COMP_LIBS = libncdf.a libfdict.a libwxml.a libncdf.a libfdict.a 
+
+FPPFLAGS = $(DEFS_PREFIX)-DFC_HAVE_ABORT -DF2003 -DMPI -DCDF -DNCDF -DNCDF_4 -DNCDF_PARALLEL -DSIESTA__ELPA -I${EBROOTELPA}/include/elpa-${EBVERSIONELPA}/modules/ -DSIESTA__METIS
+
+NETCDF_ROOT =
+NETCDF_INCFLAGS =
+NETCDF_LIBS = -L$(NETCDF_ROOT)/lib -lnetcdff -lnetcdf 
+
+FFTW_INCFLAGS = -I${FFTW_INC}
+FFTW_LIBS = -L{$FFTW_DIR} -lfftw3f -lfftw3 
+
+MPI_INTERFACE = libmpi_f90.a 
+
+MPI_INCLUDE = .
+
+LIBS = $(NETCDF_LIBS) $(COMP_LIBS) -L${EBROOTELPA}/lib -lelpa -L${EBROOTMETIS}/lib -lmetis
+
+# Dependency rules ---------
+
+FFLAGS_DEBUG = -g -O1   # your appropriate flags here...
+
+# The atom.f code is very vulnerable. Particularly the Intel compiler
+# will make an erroneous compilation of atom.f with high optimization
+# levels.
+atom.o: atom.F
+	$(FC) -c $(FFLAGS_DEBUG) $(INCFLAGS) $(FPPFLAGS) $(FPPFLAGS_fixed_F) $< 
+
+.c.o:
+	$(CC) -c $(CFLAGS) $(INCFLAGS) $(CPPFLAGS) $< 
+.F.o:
+	$(FC) -c $(FFLAGS) $(INCFLAGS) $(FPPFLAGS) $(FPPFLAGS_fixed_F)  $< 
+.F90.o:
+	$(FC) -c $(FFLAGS) $(INCFLAGS) $(FPPFLAGS) $(FPPFLAGS_free_F90) $< 
+.f.o:
+	$(FC) -c $(FFLAGS) $(INCFLAGS) $(FCFLAGS_fixed_f)  $<
+.f90.o:
+	$(FC) -c $(FFLAGS) $(INCFLAGS) $(FCFLAGS_free_f90)  $<
+
