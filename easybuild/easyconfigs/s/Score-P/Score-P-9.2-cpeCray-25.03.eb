##
# This is an easyconfig file for EasyBuild, see https://github.com/easybuilders/easybuild
# Copyright:: Copyright 2013-2024 Juelich Supercomputing Centre, Germany
# Authors::   Bernd Mohr <b.mohr@fz-juelich.de>
#             Markus Geimer <m.geimer@fz-juelich.de>
#             Christian Feld <c.feld@fz-juelich.de>
#             Jan And≈ïe Reuter <j.reuter@fz-juelich.de>
# License::   3-clause BSD
#
# This work is based on experiences from the UNITE project
# http://apps.fz-juelich.de/unite/
##

easyblock = 'EB_Score_minus_P_minus_CPE'

local_ScoreP_version =       '9.2'           # https://www.vi-hps.org/projects/score-p/

local_CubeLib_version =      '4.9'           # https://www.scalasca.org/scalasca/software/cube-4.x/download.html
local_CubeWriter_version =   '4.9'           # https://www.scalasca.org/scalasca/software/cube-4.x/download.html
local_GOTCHA_version =       '1.0.8'         # https://gotcha.readthedocs.io/en/latest/
local_libunwind_version  =   '1.8.1'         # http://download.savannah.nongnu.org/releases/libunwind/
local_libbfd_version =       '2.45'          # https://ftp.gnu.org/gnu/binutils/
local_OPARI2_version =       '2.0.9'         # https://www.vi-hps.org/projects/score-p/
local_OTF2_version =         '3.1.1'         # https://www.vi-hps.org/projects/score-p/

name =          'Score-P'
version =       local_ScoreP_version

homepage = 'https://www.score-p.org'

whatis = [
    'Description: Score-P is a scalable performance measurement infrastructure for parallel codes',
]

description = """
The Score-P measurement infrastructure is a highly scalable and easy-to-use
tool suite for profiling, event tracing, and online analysis of HPC
applications.
"""

docurls = [
    'Web-based documentation of the latest version at https://perftools.pages.jsc.fz-juelich.de/cicd/scorep/tags/latest/html/',
    'On-system documentation in $EBROOTSCOREMINP/share/doc/scorep (after loading the module)',  
]
toolchain = {'name': 'cpeCray', 'version': '25.03'}
toolchainopts = {'pic': True, 'usempi': True, 'openmp': True}

source_urls = ['http://perftools.pages.jsc.fz-juelich.de/cicd/scorep/tags/scorep-%(version)s']
sources =     ['scorep-%(version)s.tar.gz']
checksums = [
    'be3eaee99cdd0145e518c1aa959126df45e25b61579a007d062748b2844c499c',  # scorep-9.2.tar.gz
]

builddependencies = [
    ('buildtools', '%(toolchain_version)s', '', True),
]

dependencies = [
    ('CubeLib',         local_CubeLib_version),
    ('CubeWriter',      local_CubeWriter_version),
    # Unwinding/sampling support (optional):
    ('libunwind',       local_libunwind_version),
    ('OPARI2',          local_OPARI2_version),
    ('OTF2',            local_OTF2_version),
    # Support for SHMEM disabled for now, due to potential installcheck failure with
    # libpgas-shmem.so.3 not being found
    ('cray-openshmemx', EXTERNAL_MODULE),
    ('cray-pmi',        EXTERNAL_MODULE),
    ('libbfd',          local_libbfd_version),
    # Hardware counter support (optional):
    ('papi',            EXTERNAL_MODULE),
    # Library wrapping
    ('GOTCHA',          local_GOTCHA_version),
]

configopts  = '--enable-shared --disable-static --with-machine-name=LUMI-cpeCray-25.03 '
configopts += '--with-libpmi=/opt/cray/pe/pmi/default '
configopts += '--with-papi-header=$CRAY_PAPI_PREFIX/include --with-papi-lib=$CRAY_PAPI_PREFIX/lib '
# Cray CPE 25.03 doesn't correctly rpath libpgas-shmem.so, and doesn't provide the LD_LIBRARY_PATH
# for it. Since some libraries link to it (due to libtool removing the --as-needed and --no-as-needed),
# we need to add the rpath to avoid build checks failing as shared libraries are not self-contained anymore.
configopts += 'LDFLAGS="-Wl,-rpath=$CRAYLIBS_X86_64" '
configopts += 'LDFLAGS_FOR_BUILD_SCORE="-Wl,-rpath=$CRAYLIBS_X86_64" '

buildopts = " V=1 VERBOSE=1 "

postinstallcmds = [
    'make installcheck V=1 VERBOSE=1',
    'mkdir -p %(installdir)s/share/licenses/%(name)s && ' +
    'cp AUTHORS ChangeLog CITATION.cff COPYING OPEN_ISSUES README.md THANKS %(installdir)s/share/licenses/%(name)s',   
]

sanity_check_paths = {
    'files': ['bin/scorep', 'include/scorep/SCOREP_User.h',
              ('lib/libscorep_adapter_mpi_event.%s' % SHLIB_EXT, 'lib64/libscorep_adapter_mpi_event.%s' % SHLIB_EXT)],
    'dirs':  [],
}

# Ensure that local metric documentation is found by CubeGUI
modextrapaths = {'CUBE_DOCPATH': 'share/doc/scorep/profile'}

moduleclass = 'perf'

