# Adapted by Kurt Lust (Kurt.Lust@uantwerpen.be) from recipes in
# the EasyBuild and repository, for the LUMI consortium.
local_ParMETIS_version =     '4.0.3'         # https:/http://glaros.dtc.umn.edu/gkhome/metis/parmetis/download

name =    'ParMETIS'
version = local_ParMETIS_version
versionsuffix = '-shared'

homepage = 'http://glaros.dtc.umn.edu/gkhome/metis/parmetis/overview'

whatis = [
    'Description: ParMETIS - Parallel Graph Partitioning and Fill-reducing Matrix Ordering'
]

description = """
ParMETIS is an MPI-based parallel library that implements a variety of algorithms
for partitioning  unstructured graphs, meshes, and for computing fill-reducing
orderings of sparse matrices. ParMETIS extends the  functionality provided by
METIS and includes routines that are especially suited for parallel AMR
computations and large scale numerical simulations. The algorithms implemented
in ParMETIS are based on the parallel multilevel k-way graph-partitioning,
adaptive repartitioning, and parallel multi-constrained partitioning schemes.

ParMETIS also contains the METIS library.


Copyright & License Notice
==========================
ParMETIS is copyrighted by the Regents of the University of Minnesota. It can
be freely used for educational and research purposes by non-profit institutions
and US government agencies only. Other organizations are allowed to use ParMETIS
only for evaluation purposes, and any further uses will require prior approval.
The software may not be sold or redistributed without prior approval. One may
make copies of the software for their use provided that the copies, are not sold
or distributed, are used under the same terms and conditions.
"""

docurls = [
    'PDF of the manual at http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/manual.pdf'
]

software_license_urls = [
    'http://glaros.dtc.umn.edu/gkhome/metis/parmetis/download',
]

toolchain = {'name': 'cpeGNU', 'version': '24.03'}
toolchainopts = {'usempi': True, 'openmp': True, 'pic': True}

source_urls = [
    'http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis',
    'http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/OLD',
]
sources =   [SOURCELOWER_TAR_GZ]
checksums = ['f2d9a231b7cf97f1fee6e8c9663113ebf6c240d407d3c118c55b3633d6be6e5f']

builddependencies = [ # Create a reproducible build environment.
    ('buildtools',   '%(toolchain_version)s',   '', True), # For CMake
]

# Doesn't need MPI, ROCm or BLAS, and module unload never fails so this is safe.
preconfigopts = 'module unload cray-libsci rocm craype-accel-amd-gfx90a && '
prebuildopts = preconfigopts
preinstallopts = preconfigopts

# To better check the log files, do a verbose build.
buildopts = 'VERBOSE=1'

configopts = '-DSHARED=1'

postinstallcmds = [
    'mkdir -p %(installdir)s/share/licenses/%(name)s',
    'cp Changelog LICENSE.txt %(installdir)s/share/licenses/%(name)s',
]

moduleclass = 'math'
