# Adapted from a standard EasyConfig for LUMI by Kurt Lust (kurt.lust@UAntwerpen.be), LUMI User Support Team
easyblock = 'ConfigureMake'

local_craypython_version =   '3.9.4.2'
local_gettext_version =      '0.21'          # https://ftp.gnu.org/pub/gnu/gettext/

local_cairo_version =        '1.17.4'        # https://www.cairographics.org/
local_expat_version =        '2.4.8'         # https://github.com/libexpat/libexpat/releases
local_GLib_version =         '2.73.0'        # https://ftp.gnome.org/pub/GNOME/sources/glib/
local_libjpegturbo_version = '2.1.3'         # https://github.com/libjpeg-turbo/libjpeg-turbo/releases
local_libpng_version =       '1.6.37'        # http://www.libpng.org/pub/png/libpng.html
local_libtiff_version =      '4.4.0'         # https://download.osgeo.org/libtiff/
local_XZ_version =           '5.2.5'         # https://tukaani.org/xz/
local_zlib_version =         '1.2.12'        # https://zlib.net/

name =    'wxWidgets'
version = '3.2.1'

homepage = 'https://www.wxwidgets.org'

whatis = [
    'Description: wxWidgets is a C++ library for creating applications for multiple OSes with a single code base'
]

description = """
wxWidgets is a C++ library that lets developers create
applications for Windows, Mac OS X, Linux and other platforms with a
single code base. It has popular language bindings for Python, Perl,
Ruby and many other languages, and unlike other cross-platform toolkits,
wxWidgets gives applications a truly native look and feel because it
uses the platform's native API rather than emulating the GUI.
"""

toolchain = {'name': 'cpeGNU', 'version': '22.08'}
toolchainopts = {'pic': True}

# wxWidgets now contain three submodules: catch, nanosvg and pcre
sources = [{
    'git_config': {
        'url': 'https://github.com/wxWidgets/',
        'repo_name': 'wxWidgets',
        'tag': 'v%(version)s',
        'recursive': True,
    },
    'filename': SOURCE_TAR_GZ,
}]
checksums = [None]

builddependencies = [
    ('buildtools',  '%(toolchain_version)s', '',  SYSTEM),
    ('gettext',     local_gettext_version),
    ('cray-python/' + local_craypython_version, EXTERNAL_MODULE),
]

dependencies = [
    ('libpng',           local_libpng_version),
    ('zlib',             local_zlib_version),
    ('libjpeg-turbo',    local_libjpegturbo_version),
    ('XZ',               local_XZ_version),
    ('jbigkit',          '2.1'),
    ('LibTIFF',          local_libtiff_version),
    ('expat',            local_expat_version),
    ('GTK3',             '3.24.33'),
    ('X11',              '%(toolchain_version)s'),
    ('Mesa',             '22.0.3'),
    ('libGLU',           '9.0.2'),
    ('SDL2',             '2.0.22'),
    ('cairo',            local_cairo_version),
    ('GST-plugins-base', '1.20.2'),
    ('GLib',             local_GLib_version),
]

local_cpath_ext = '$EBROOTGTKPLUS/include/gtk-3.0:$EBROOTGLIB/include/glib-2.0:$EBROOTGLIB/lib/glib-2.0/include'

preconfigopts = 'CPATH=$CPATH:%s ' % local_cpath_ext

configopts = '--enable-intl --enable-ipv6 '
# Options required by wxPython
configopts += '--with-gtk=3 --with-gtk-prefix=$EBROOTGTKPLUS '
# Note: the configure step might claim to find OpenGL headers in
# /usr/include, but it will still use the ones from the Mesa dependency above
configopts += '--with-opengl '
configopts += '--enable-unicode --enable-sound --enable-graphics_ctx '
configopts += '--enable-mediactrl --enable-display --enable-geometry '
configopts += '--enable-debug_flag --enable-optimise --disable-debugreport '
configopts += '--enable-autoidman --with-sdl '
configopts += '--disable-webview --disable-webviewwebkit '
configopts += '--disable-tests '


prebuildopts = 'CPATH=$CPATH:%s ' % local_cpath_ext

sanity_check_paths = {
    'files': ['bin/wx-config', 'bin/wxrc'],
    'dirs': ['include/wx-%(version_major_minor)s/wx', 'lib', 'share'],
}

sanity_check_commands = [
    'wxrc --help',
]

moduleclass = 'vis'
