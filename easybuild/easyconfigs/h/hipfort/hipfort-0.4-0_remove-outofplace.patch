diff -ruN hipfort-rocm-6.0.2/lib/hipfort/hipfort_rocblas.f hipfort-rocm-6.0.2.new/lib/hipfort/hipfort_rocblas.f
--- hipfort-rocm-6.0.2/lib/hipfort/hipfort_rocblas.f	2024-01-16 23:47:40.000000000 +0200
+++ hipfort-rocm-6.0.2.new/lib/hipfort/hipfort_rocblas.f	2024-08-22 15:21:11.000000000 +0300
@@ -18986,695 +18986,6 @@
 
   end interface
   
-  interface rocblas_strmm_outofplace
-    function rocblas_strmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc) bind(c, name="rocblas_strmm_outofplace")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transA
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      real(c_float) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_strmm_outofplace_full_rank,&
-      rocblas_strmm_outofplace_rank_0,&
-      rocblas_strmm_outofplace_rank_1
-#endif
-  end interface
-  
-  interface rocblas_dtrmm_outofplace
-    function rocblas_dtrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc) bind(c, name="rocblas_dtrmm_outofplace")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transA
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      real(c_double) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_dtrmm_outofplace_full_rank,&
-      rocblas_dtrmm_outofplace_rank_0,&
-      rocblas_dtrmm_outofplace_rank_1
-#endif
-  end interface
-  
-  interface rocblas_ctrmm_outofplace
-    function rocblas_ctrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc) bind(c, name="rocblas_ctrmm_outofplace")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transA
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      complex(c_float_complex) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_ctrmm_outofplace_full_rank,&
-      rocblas_ctrmm_outofplace_rank_0,&
-      rocblas_ctrmm_outofplace_rank_1
-#endif
-  end interface
-  !>  \brief BLAS Level 3 API
-  !> 
-  !>     \details
-  !> 
-  !>     trmm_outofplace performs one of the matrix-matrix operations
-  !> 
-  !>     C := alpha*op( A )*B,   or   C := alpha*B*op( A )
-  !> 
-  !>     where  alpha  is a scalar,  B and C are m by n matrices,  A  is a unit, or
-  !>     non-unit,  upper or lower triangular matrix  and  op( A )  is one  of
-  !> 
-  !>         op( A ) = A   or   op( A ) = A^T   or   op( A ) = A^H.
-  !> 
-  !>     Note that trmm_outofplace can provide in-place functionality in the same way as trmm
-  !>     by passing in the same address for both matrices B and C.
-  !> 
-  !>     @param[in]
-  !>     handle    [rocblas_handle]
-  !>               handle to the rocblas library context queue.
-  !> 
-  !>     @param[in]
-  !>     side    [rocblas_side]
-  !>             Specifies whether op(A) multiplies B from the left or right as follows:
-  !>             rocblas_side_left:       C := alpha*op( A )*B.
-  !>             rocblas_side_right:      C := alpha*B*op( A ).
-  !> 
-  !>     @param[in]
-  !>     uplo    [rocblas_fill]
-  !>             Specifies whether the matrix A is an upper or lower triangular matrix as follows:
-  !>             rocblas_fill_upper:  A is an upper triangular matrix.
-  !>             rocblas_fill_lower:  A is a  lower triangular matrix.
-  !> 
-  !>     @param[in]
-  !>     transA  [rocblas_operation]
-  !>             Specifies the form of op(A) to be used in the matrix multiplication as follows:
-  !>             rocblas_operation_none:    op(A) = A.
-  !>             rocblas_operation_transpose:      op(A) = A^T.
-  !>             rocblas_operation_conjugate_transpose:  op(A) = A^H.
-  !> 
-  !>     @param[in]
-  !>     diag    [rocblas_diagonal]
-  !>             Specifies whether or not A is unit triangular as follows:
-  !>             rocblas_diagonal_unit:      A is assumed to be unit triangular.
-  !>             rocblas_diagonal_non_unit:  A is not assumed to be unit triangular.
-  !> 
-  !>     @param[in]
-  !>     m       [rocblas_int]
-  !>             m specifies the number of rows of B. m >= 0.
-  !> 
-  !>     @param[in]
-  !>     n       [rocblas_int]
-  !>             n specifies the number of columns of B. n >= 0.
-  !> 
-  !>     @param[in]
-  !>     alpha
-  !>             alpha specifies the scalar alpha. When alpha is
-  !>             zero then A is not referenced and B need not be set before
-  !>             entry.
-  !> 
-  !>     @param[in]
-  !>     A       Device pointer to matrix A on the GPU.
-  !>             A has dimension ( lda, k ), where k is m
-  !>             when  side == rocblas_side_left  and
-  !>             is  n  when  side == rocblas_side_right.
-  !> 
-  !>         When uplo == rocblas_fill_upper the  leading  k by k
-  !>         upper triangular part of the array  A must contain the upper
-  !>         triangular matrix  and the strictly lower triangular part of
-  !>         A is not referenced.
-  !> 
-  !>         When uplo == rocblas_fill_lower the  leading  k by k
-  !>         lower triangular part of the array  A must contain the lower
-  !>         triangular matrix  and the strictly upper triangular part of
-  !>         A is not referenced.
-  !> 
-  !>         Note that when  diag == rocblas_diagonal_unit  the diagonal elements of
-  !>         A  are not referenced either,  but are assumed to be  unity.
-  !> 
-  !>     @param[in]
-  !>     lda     [rocblas_int]
-  !>             lda specifies the first dimension of A.
-  !>             if side == rocblas_side_left,  lda >= max( 1, m ),
-  !>             if side == rocblas_side_right, lda >= max( 1, n ).
-  !> 
-  !>     @param[in]
-  !>     B       Device pointer to the matrix B on the GPU.
-  !> 
-  !>     @param[in]
-  !>     ldb    [rocblas_int]
-  !>            ldb specifies the first dimension of B. ldb >= max( 1, m ).
-  !> 
-  !>     @param[out]
-  !>     C      Device pointer to the matrix C on the GPU.
-  !> 
-  !>     @param[in]
-  !>     ldc   [rocblas_int]
-  !>           ldc specifies the first dimension of C. ldc >= max( 1, m).
-  !>
-  interface rocblas_ztrmm_outofplace
-    function rocblas_ztrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc) bind(c, name="rocblas_ztrmm_outofplace")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transA
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      complex(c_double_complex) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_ztrmm_outofplace_full_rank,&
-      rocblas_ztrmm_outofplace_rank_0,&
-      rocblas_ztrmm_outofplace_rank_1
-#endif
-  end interface
-  
-  interface rocblas_strmm_outofplace_batched
-    function rocblas_strmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count) bind(c, name="rocblas_strmm_outofplace_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      real(c_float) :: alpha
-      type(c_ptr) :: A
-      integer(c_int),value :: lda
-      type(c_ptr) :: B
-      integer(c_int),value :: ldb
-      type(c_ptr) :: C
-      integer(c_int),value :: ldc
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_strmm_outofplace_batched_full_rank,&
-      rocblas_strmm_outofplace_batched_rank_0,&
-      rocblas_strmm_outofplace_batched_rank_1
-#endif
-  end interface
-  
-  interface rocblas_dtrmm_outofplace_batched
-    function rocblas_dtrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count) bind(c, name="rocblas_dtrmm_outofplace_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      real(c_double) :: alpha
-      type(c_ptr) :: A
-      integer(c_int),value :: lda
-      type(c_ptr) :: B
-      integer(c_int),value :: ldb
-      type(c_ptr) :: C
-      integer(c_int),value :: ldc
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_dtrmm_outofplace_batched_full_rank,&
-      rocblas_dtrmm_outofplace_batched_rank_0,&
-      rocblas_dtrmm_outofplace_batched_rank_1
-#endif
-  end interface
-  
-  interface rocblas_ctrmm_outofplace_batched
-    function rocblas_ctrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count) bind(c, name="rocblas_ctrmm_outofplace_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      complex(c_float_complex) :: alpha
-      type(c_ptr) :: A
-      integer(c_int),value :: lda
-      type(c_ptr) :: B
-      integer(c_int),value :: ldb
-      type(c_ptr) :: C
-      integer(c_int),value :: ldc
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_ctrmm_outofplace_batched_full_rank,&
-      rocblas_ctrmm_outofplace_batched_rank_0,&
-      rocblas_ctrmm_outofplace_batched_rank_1
-#endif
-  end interface
-  !>  \brief BLAS Level 3 API
-  !> 
-  !>     \details
-  !> 
-  !>     trmm_outofplace_batched performs one of the batched matrix-matrix operations
-  !> 
-  !>     C_i := alpha*op( A_i )*B_i,   or   C_i := alpha*B_i*op( A_i )  for i = 0, 1, ... batch_count -1
-  !> 
-  !>     where  alpha  is a scalar,  B_i  is an m by n matrix,  A_i  is a unit, or
-  !>     non-unit,  upper or lower triangular matrix  and  op( A_i )  is one  of
-  !> 
-  !>         op( A_i ) = A_i   or   op( A_i ) = A_i^T   or   op( A_i ) = A_i^H.
-  !> 
-  !>     Note that trmm_outofplace_batched can provide in-place functionality in the same way as trmm_batched
-  !>     by passing in the same address for both matrices B and C.
-  !> 
-  !>     @param[in]
-  !>     handle    [rocblas_handle]
-  !>               handle to the rocblas library context queue.
-  !> 
-  !>     @param[in]
-  !>     side    [rocblas_side]
-  !>             Specifies whether op(A_i) multiplies B_i from the left or right as follows:
-  !>             rocblas_side_left:       C_i := alpha*op( A_i )*B_i.
-  !>             rocblas_side_right:      C_i := alpha*B_i*op( A_i ).
-  !> 
-  !>     @param[in]
-  !>     uplo    [rocblas_fill]
-  !>             Specifies whether the matrix A is an upper or lower triangular matrix as follows:
-  !>             rocblas_fill_upper:  A is an upper triangular matrix.
-  !>             rocblas_fill_lower:  A is a  lower triangular matrix.
-  !> 
-  !>     @param[in]
-  !>     transA  [rocblas_operation]
-  !>             Specifies the form of op(A_i) to be used in the matrix multiplication as follows:
-  !>             rocblas_operation_none:    op(A_i) = A_i.
-  !>             rocblas_operation_transpose:      op(A_i) = A_i^T.
-  !>             rocblas_operation_conjugate_transpose:  op(A_i) = A_i^H.
-  !> 
-  !>     @param[in]
-  !>     diag    [rocblas_diagonal]
-  !>             Specifies whether or not A_i is unit triangular as follows:
-  !>             rocblas_diagonal_unit:      A_i is assumed to be unit triangular.
-  !>             rocblas_diagonal_non_unit:  A_i is not assumed to be unit triangular.
-  !> 
-  !>     @param[in]
-  !>     m       [rocblas_int]
-  !>             m specifies the number of rows of B_i. m >= 0.
-  !> 
-  !>     @param[in]
-  !>     n       [rocblas_int]
-  !>             n specifies the number of columns of B_i. n >= 0.
-  !> 
-  !>     @param[in]
-  !>     alpha
-  !>             alpha specifies the scalar alpha. When alpha is
-  !>             zero then A_i is not referenced and B_i need not be set before
-  !>             entry.
-  !> 
-  !>     @param[in]
-  !>     A       Device array of device pointers storing each matrix A_i on the GPU.
-  !>             Each A_i is of dimension ( lda, k ), where k is m
-  !>             when  side == rocblas_side_left  and
-  !>             is  n  when  side == rocblas_side_right.
-  !> 
-  !>         When uplo == rocblas_fill_upper the  leading  k by k
-  !>         upper triangular part of the array  A must contain the upper
-  !>         triangular matrix  and the strictly lower triangular part of
-  !>         A is not referenced.
-  !> 
-  !>         When uplo == rocblas_fill_lower the  leading  k by k
-  !>         lower triangular part of the array  A must contain the lower
-  !>         triangular matrix  and the strictly upper triangular part of
-  !>         A is not referenced.
-  !> 
-  !>         Note that when  diag == rocblas_diagonal_unit  the diagonal elements of
-  !>         A_i  are not referenced either,  but are assumed to be  unity.
-  !> 
-  !>     @param[in]
-  !>     lda     [rocblas_int]
-  !>             lda specifies the first dimension of A.
-  !>             if side == rocblas_side_left,  lda >= max( 1, m ),
-  !>             if side == rocblas_side_right, lda >= max( 1, n ).
-  !> 
-  !>     @param[in]
-  !>     B       device array of device pointers storing each matrix B_i on the GPU.
-  !> 
-  !>     @param[in]
-  !>     ldb    [rocblas_int]
-  !>            ldb specifies the first dimension of B_i. ldb >= max( 1, m ).
-  !> 
-  !>     @param[out]
-  !>     C      device array of device pointers storing each matrix C_i on the GPU.
-  !> 
-  !>     @param[in]
-  !>     ldc   [rocblas_int]
-  !>           ldc specifies the first dimension of C. ldc >= max( 1, m).
-  !> 
-  !>     @param[in]
-  !>     batch_count [rocblas_int]
-  !>                 number of instances i in the batch.
-  interface rocblas_ztrmm_outofplace_batched
-    function rocblas_ztrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count) bind(c, name="rocblas_ztrmm_outofplace_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      complex(c_double_complex) :: alpha
-      type(c_ptr) :: A
-      integer(c_int),value :: lda
-      type(c_ptr) :: B
-      integer(c_int),value :: ldb
-      type(c_ptr) :: C
-      integer(c_int),value :: ldc
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_ztrmm_outofplace_batched_full_rank,&
-      rocblas_ztrmm_outofplace_batched_rank_0,&
-      rocblas_ztrmm_outofplace_batched_rank_1
-#endif
-  end interface
-  
-  interface rocblas_strmm_outofplace_strided_batched
-    function rocblas_strmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count) bind(c, name="rocblas_strmm_outofplace_strided_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_strided_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      real(c_float) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      integer(c_int64_t),value :: stride_a
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      integer(c_int64_t),value :: stride_b
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-      integer(c_int64_t),value :: stride_c
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_strmm_outofplace_strided_batched_full_rank,&
-      rocblas_strmm_outofplace_strided_batched_rank_0,&
-      rocblas_strmm_outofplace_strided_batched_rank_1
-#endif
-  end interface
-  
-  interface rocblas_dtrmm_outofplace_strided_batched
-    function rocblas_dtrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count) bind(c, name="rocblas_dtrmm_outofplace_strided_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_strided_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      real(c_double) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      integer(c_int64_t),value :: stride_a
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      integer(c_int64_t),value :: stride_b
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-      integer(c_int64_t),value :: stride_c
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_dtrmm_outofplace_strided_batched_full_rank,&
-      rocblas_dtrmm_outofplace_strided_batched_rank_0,&
-      rocblas_dtrmm_outofplace_strided_batched_rank_1
-#endif
-  end interface
-  
-  interface rocblas_ctrmm_outofplace_strided_batched
-    function rocblas_ctrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count) bind(c, name="rocblas_ctrmm_outofplace_strided_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_strided_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      complex(c_float_complex) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      integer(c_int64_t),value :: stride_a
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      integer(c_int64_t),value :: stride_b
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-      integer(c_int64_t),value :: stride_c
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_ctrmm_outofplace_strided_batched_full_rank,&
-      rocblas_ctrmm_outofplace_strided_batched_rank_0,&
-      rocblas_ctrmm_outofplace_strided_batched_rank_1
-#endif
-  end interface
-  !>  \brief BLAS Level 3 API
-  !> 
-  !>     \details
-  !> 
-  !>     trmm_outofplace_strided_batched performs one of the strided_batched matrix-matrix operations
-  !> 
-  !>     C_i := alpha*op( A_i )*B_i,   or   C_i := alpha*B_i*op( A_i )  for i = 0, 1, ... batch_count -1
-  !> 
-  !>     where  alpha  is a scalar,  B_i  is an m by n matrix,  A_i  is a unit, or
-  !>     non-unit,  upper or lower triangular matrix  and  op( A_i )  is one  of
-  !> 
-  !>         op( A_i ) = A_i   or   op( A_i ) = A_i^T   or   op( A_i ) = A_i^H.
-  !> 
-  !>     Note that trmm_outofplace_strided_batched can provide in-place functionality in the same way as trmm_strided_batched
-  !>     by passing in the same address for both matrices B and C.
-  !> 
-  !>     @param[in]
-  !>     handle    [rocblas_handle]
-  !>               handle to the rocblas library context queue.
-  !> 
-  !>     @param[in]
-  !>     side    [rocblas_side]
-  !>             Specifies whether op(A_i) multiplies B_i from the left or right as follows:
-  !>             rocblas_side_left:       C_i := alpha*op( A_i )*B_i.
-  !>             rocblas_side_right:      C_i := alpha*B_i*op( A_i ).
-  !> 
-  !>     @param[in]
-  !>     uplo    [rocblas_fill]
-  !>             Specifies whether the matrix A is an upper or lower triangular matrix as follows:
-  !>             rocblas_fill_upper:  A is an upper triangular matrix.
-  !>             rocblas_fill_lower:  A is a  lower triangular matrix.
-  !> 
-  !>     @param[in]
-  !>     transA  [rocblas_operation]
-  !>             Specifies the form of op(A_i) to be used in the matrix multiplication as follows:
-  !>             rocblas_operation_none:    op(A_i) = A_i.
-  !>             rocblas_operation_transpose:      op(A_i) = A_i^T.
-  !>             rocblas_operation_conjugate_transpose:  op(A_i) = A_i^H.
-  !> 
-  !>     @param[in]
-  !>     diag    [rocblas_diagonal]
-  !>             Specifies whether or not A_i is unit triangular as follows:
-  !>             rocblas_diagonal_unit:      A_i is assumed to be unit triangular.
-  !>             rocblas_diagonal_non_unit:  A_i is not assumed to be unit triangular.
-  !> 
-  !>     @param[in]
-  !>     m       [rocblas_int]
-  !>             m specifies the number of rows of B_i. m >= 0.
-  !> 
-  !>     @param[in]
-  !>     n       [rocblas_int]
-  !>             n specifies the number of columns of B_i. n >= 0.
-  !> 
-  !>     @param[in]
-  !>     alpha
-  !>             alpha specifies the scalar alpha. When alpha is
-  !>             zero then A_i is not referenced and B_i need not be set before
-  !>             entry.
-  !> 
-  !>     @param[in]
-  !>     A       Device pointer to the first matrix A_0 on the GPU.
-  !>             Each A_i is of dimension ( lda, k ), where k is m
-  !>             when  side == rocblas_side_left  and
-  !>             is  n  when  side == rocblas_side_right.
-  !> 
-  !>         When uplo == rocblas_fill_upper the  leading  k by k
-  !>         upper triangular part of the array  A must contain the upper
-  !>         triangular matrix  and the strictly lower triangular part of
-  !>         A is not referenced.
-  !> 
-  !>         When uplo == rocblas_fill_lower the  leading  k by k
-  !>         lower triangular part of the array  A must contain the lower
-  !>         triangular matrix  and the strictly upper triangular part of
-  !>         A is not referenced.
-  !> 
-  !>         Note that when  diag == rocblas_diagonal_unit  the diagonal elements of
-  !>         A_i  are not referenced either,  but are assumed to be  unity.
-  !> 
-  !>     @param[in]
-  !>     lda     [rocblas_int]
-  !>             lda specifies the first dimension of A.
-  !>             if side == rocblas_side_left,  lda >= max( 1, m ),
-  !>             if side == rocblas_side_right, lda >= max( 1, n ).
-  !> 
-  !>     @param[in]
-  !>     stride_A  [rocblas_stride]
-  !>               stride from the start of one matrix (A_i) and the next one (A_i+1)
-  !> 
-  !>     @param[in]
-  !>     B       Device pointer to the first matrix B_0 on the GPU.
-  !> 
-  !>     @param[in]
-  !>     ldb    [rocblas_int]
-  !>            ldb specifies the first dimension of B_i. ldb >= max( 1, m ).
-  !> 
-  !>     @param[in]
-  !>     stride_B  [rocblas_stride]
-  !>               stride from the start of one matrix (B_i) and the next one (B_i+1)
-  !> 
-  !>     @param[out]
-  !>     C      Device pointer to the first matrix C_0 on the GPU.
-  !> 
-  !>     @param[in]
-  !>     ldc   [rocblas_int]
-  !>           ldc specifies the first dimension of C_i. ldc >= max( 1, m).
-  !> 
-  !>     @param[in]
-  !>     stride_C  [rocblas_stride]
-  !>               stride from the start of one matrix (C_i) and the next one (C_i+1)
-  !> 
-  !>     @param[in]
-  !>     batch_count [rocblas_int]
-  !>                 number of instances i in the batch.
-  interface rocblas_ztrmm_outofplace_strided_batched
-    function rocblas_ztrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count) bind(c, name="rocblas_ztrmm_outofplace_strided_batched")
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_strided_batched_
-      type(c_ptr),value :: handle
-      integer(kind(rocblas_side_left)),value :: side
-      integer(kind(rocblas_fill_upper)),value :: uplo
-      integer(kind(rocblas_operation_none)),value :: transa
-      integer(kind(rocblas_diagonal_non_unit)),value :: diag
-      integer(c_int),value :: m
-      integer(c_int),value :: n
-      complex(c_double_complex) :: alpha
-      type(c_ptr),value :: A
-      integer(c_int),value :: lda
-      integer(c_int64_t),value :: stride_a
-      type(c_ptr),value :: B
-      integer(c_int),value :: ldb
-      integer(c_int64_t),value :: stride_b
-      type(c_ptr),value :: C
-      integer(c_int),value :: ldc
-      integer(c_int64_t),value :: stride_c
-      integer(c_int),value :: batch_count
-    end function
-
-#ifdef USE_FPOINTER_INTERFACES
-    module procedure &
-      rocblas_ztrmm_outofplace_strided_batched_full_rank,&
-      rocblas_ztrmm_outofplace_strided_batched_rank_0,&
-      rocblas_ztrmm_outofplace_strided_batched_rank_1
-#endif
-  end interface
-  
   interface rocblas_strtri
     function rocblas_strtri_(handle,uplo,diag,n,A,lda,invA,ldinvA) bind(c, name="rocblas_strtri")
       use iso_c_binding
@@ -48021,894 +47332,6 @@
       rocblas_ztrmm_rank_1 = rocblas_ztrmm_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb)
     end function
 
-    function rocblas_strmm_outofplace_full_rank(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      real(c_float),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      real(c_float),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_strmm_outofplace_full_rank = rocblas_strmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_strmm_outofplace_rank_0(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target :: A
-      integer(c_int) :: lda
-      real(c_float),target :: B
-      integer(c_int) :: ldb
-      real(c_float),target :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_strmm_outofplace_rank_0 = rocblas_strmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_strmm_outofplace_rank_1(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target,dimension(:) :: A
-      integer(c_int) :: lda
-      real(c_float),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      real(c_float),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_strmm_outofplace_rank_1 = rocblas_strmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_dtrmm_outofplace_full_rank(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      real(c_double),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      real(c_double),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_dtrmm_outofplace_full_rank = rocblas_dtrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_dtrmm_outofplace_rank_0(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target :: A
-      integer(c_int) :: lda
-      real(c_double),target :: B
-      integer(c_int) :: ldb
-      real(c_double),target :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_dtrmm_outofplace_rank_0 = rocblas_dtrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_dtrmm_outofplace_rank_1(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target,dimension(:) :: A
-      integer(c_int) :: lda
-      real(c_double),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      real(c_double),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_dtrmm_outofplace_rank_1 = rocblas_dtrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_ctrmm_outofplace_full_rank(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      complex(c_float_complex),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      complex(c_float_complex),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_ctrmm_outofplace_full_rank = rocblas_ctrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_ctrmm_outofplace_rank_0(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target :: A
-      integer(c_int) :: lda
-      complex(c_float_complex),target :: B
-      integer(c_int) :: ldb
-      complex(c_float_complex),target :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_ctrmm_outofplace_rank_0 = rocblas_ctrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_ctrmm_outofplace_rank_1(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target,dimension(:) :: A
-      integer(c_int) :: lda
-      complex(c_float_complex),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      complex(c_float_complex),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_ctrmm_outofplace_rank_1 = rocblas_ctrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_ztrmm_outofplace_full_rank(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      complex(c_double_complex),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      complex(c_double_complex),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_ztrmm_outofplace_full_rank = rocblas_ztrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_ztrmm_outofplace_rank_0(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target :: A
-      integer(c_int) :: lda
-      complex(c_double_complex),target :: B
-      integer(c_int) :: ldb
-      complex(c_double_complex),target :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_ztrmm_outofplace_rank_0 = rocblas_ztrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_ztrmm_outofplace_rank_1(handle,side,uplo,transA,diag,m,n,alpha,A,lda,B,ldb,C,ldc)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transA
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target,dimension(:) :: A
-      integer(c_int) :: lda
-      complex(c_double_complex),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      complex(c_double_complex),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      !
-      rocblas_ztrmm_outofplace_rank_1 = rocblas_ztrmm_outofplace_(handle,side,uplo,transA,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc)
-    end function
-
-    function rocblas_strmm_outofplace_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target,dimension(:,:,:) :: A
-      integer(c_int) :: lda
-      real(c_float),target,dimension(:,:,:) :: B
-      integer(c_int) :: ldb
-      real(c_float),target,dimension(:,:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_strmm_outofplace_batched_full_rank = rocblas_strmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_strmm_outofplace_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target :: A
-      integer(c_int) :: lda
-      real(c_float),target :: B
-      integer(c_int) :: ldb
-      real(c_float),target :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_strmm_outofplace_batched_rank_0 = rocblas_strmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_strmm_outofplace_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target,dimension(:) :: A
-      integer(c_int) :: lda
-      real(c_float),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      real(c_float),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_strmm_outofplace_batched_rank_1 = rocblas_strmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_dtrmm_outofplace_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target,dimension(:,:,:) :: A
-      integer(c_int) :: lda
-      real(c_double),target,dimension(:,:,:) :: B
-      integer(c_int) :: ldb
-      real(c_double),target,dimension(:,:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_dtrmm_outofplace_batched_full_rank = rocblas_dtrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_dtrmm_outofplace_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target :: A
-      integer(c_int) :: lda
-      real(c_double),target :: B
-      integer(c_int) :: ldb
-      real(c_double),target :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_dtrmm_outofplace_batched_rank_0 = rocblas_dtrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_dtrmm_outofplace_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target,dimension(:) :: A
-      integer(c_int) :: lda
-      real(c_double),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      real(c_double),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_dtrmm_outofplace_batched_rank_1 = rocblas_dtrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_ctrmm_outofplace_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target,dimension(:,:,:) :: A
-      integer(c_int) :: lda
-      complex(c_float_complex),target,dimension(:,:,:) :: B
-      integer(c_int) :: ldb
-      complex(c_float_complex),target,dimension(:,:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_ctrmm_outofplace_batched_full_rank = rocblas_ctrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_ctrmm_outofplace_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target :: A
-      integer(c_int) :: lda
-      complex(c_float_complex),target :: B
-      integer(c_int) :: ldb
-      complex(c_float_complex),target :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_ctrmm_outofplace_batched_rank_0 = rocblas_ctrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_ctrmm_outofplace_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target,dimension(:) :: A
-      integer(c_int) :: lda
-      complex(c_float_complex),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      complex(c_float_complex),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_ctrmm_outofplace_batched_rank_1 = rocblas_ctrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_ztrmm_outofplace_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target,dimension(:,:,:) :: A
-      integer(c_int) :: lda
-      complex(c_double_complex),target,dimension(:,:,:) :: B
-      integer(c_int) :: ldb
-      complex(c_double_complex),target,dimension(:,:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_ztrmm_outofplace_batched_full_rank = rocblas_ztrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_ztrmm_outofplace_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target :: A
-      integer(c_int) :: lda
-      complex(c_double_complex),target :: B
-      integer(c_int) :: ldb
-      complex(c_double_complex),target :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_ztrmm_outofplace_batched_rank_0 = rocblas_ztrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_ztrmm_outofplace_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,B,ldb,C,ldc,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target,dimension(:) :: A
-      integer(c_int) :: lda
-      complex(c_double_complex),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      complex(c_double_complex),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int) :: batch_count
-      !
-      rocblas_ztrmm_outofplace_batched_rank_1 = rocblas_ztrmm_outofplace_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,c_loc(B),ldb,c_loc(C),ldc,batch_count)
-    end function
-
-    function rocblas_strmm_outofplace_strided_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_strided_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      real(c_float),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      real(c_float),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_strmm_outofplace_strided_batched_full_rank = rocblas_strmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_strmm_outofplace_strided_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_strided_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      real(c_float),target :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      real(c_float),target :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_strmm_outofplace_strided_batched_rank_0 = rocblas_strmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_strmm_outofplace_strided_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_strmm_outofplace_strided_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_float) :: alpha
-      real(c_float),target,dimension(:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      real(c_float),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      real(c_float),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_strmm_outofplace_strided_batched_rank_1 = rocblas_strmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_dtrmm_outofplace_strided_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_strided_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      real(c_double),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      real(c_double),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_dtrmm_outofplace_strided_batched_full_rank = rocblas_dtrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_dtrmm_outofplace_strided_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_strided_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      real(c_double),target :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      real(c_double),target :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_dtrmm_outofplace_strided_batched_rank_0 = rocblas_dtrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_dtrmm_outofplace_strided_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_dtrmm_outofplace_strided_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      real(c_double) :: alpha
-      real(c_double),target,dimension(:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      real(c_double),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      real(c_double),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_dtrmm_outofplace_strided_batched_rank_1 = rocblas_dtrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_ctrmm_outofplace_strided_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_strided_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      complex(c_float_complex),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      complex(c_float_complex),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_ctrmm_outofplace_strided_batched_full_rank = rocblas_ctrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_ctrmm_outofplace_strided_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_strided_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      complex(c_float_complex),target :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      complex(c_float_complex),target :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_ctrmm_outofplace_strided_batched_rank_0 = rocblas_ctrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_ctrmm_outofplace_strided_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ctrmm_outofplace_strided_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_float_complex) :: alpha
-      complex(c_float_complex),target,dimension(:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      complex(c_float_complex),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      complex(c_float_complex),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_ctrmm_outofplace_strided_batched_rank_1 = rocblas_ctrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_ztrmm_outofplace_strided_batched_full_rank(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_strided_batched_full_rank
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target,dimension(:,:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      complex(c_double_complex),target,dimension(:,:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      complex(c_double_complex),target,dimension(:,:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_ztrmm_outofplace_strided_batched_full_rank = rocblas_ztrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_ztrmm_outofplace_strided_batched_rank_0(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_strided_batched_rank_0
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      complex(c_double_complex),target :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      complex(c_double_complex),target :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_ztrmm_outofplace_strided_batched_rank_0 = rocblas_ztrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
-    function rocblas_ztrmm_outofplace_strided_batched_rank_1(handle,side,uplo,transa,diag,m,n,alpha,A,lda,stride_a,B,ldb,stride_b,C,ldc,stride_c,batch_count)
-      use iso_c_binding
-      use hipfort_rocblas_enums
-      implicit none
-      integer(kind(rocblas_status_success)) :: rocblas_ztrmm_outofplace_strided_batched_rank_1
-      type(c_ptr) :: handle
-      integer(kind(rocblas_side_left)) :: side
-      integer(kind(rocblas_fill_upper)) :: uplo
-      integer(kind(rocblas_operation_none)) :: transa
-      integer(kind(rocblas_diagonal_non_unit)) :: diag
-      integer(c_int) :: m
-      integer(c_int) :: n
-      complex(c_double_complex) :: alpha
-      complex(c_double_complex),target,dimension(:) :: A
-      integer(c_int) :: lda
-      integer(c_int64_t) :: stride_a
-      complex(c_double_complex),target,dimension(:) :: B
-      integer(c_int) :: ldb
-      integer(c_int64_t) :: stride_b
-      complex(c_double_complex),target,dimension(:) :: C
-      integer(c_int) :: ldc
-      integer(c_int64_t) :: stride_c
-      integer(c_int) :: batch_count
-      !
-      rocblas_ztrmm_outofplace_strided_batched_rank_1 = rocblas_ztrmm_outofplace_strided_batched_(handle,side,uplo,transa,diag,m,n,alpha,c_loc(A),lda,stride_a,c_loc(B),ldb,stride_b,c_loc(C),ldc,stride_c,batch_count)
-    end function
-
     function rocblas_strtri_full_rank(handle,uplo,diag,n,A,lda,invA,ldinvA)
       use iso_c_binding
       use hipfort_rocblas_enums
@@ -53021,4 +51444,4 @@
 
   
 #endif
-end module hipfort_rocblas
\ No newline at end of file
+end module hipfort_rocblas
Binary files hipfort-rocm-6.0.2/test/f2003/rocfft/rocfft and hipfort-rocm-6.0.2.new/test/f2003/rocfft/rocfft differ
Binary files hipfort-rocm-6.0.2/test/f2003/rocsparse/ddoti and hipfort-rocm-6.0.2.new/test/f2003/rocsparse/ddoti differ
Binary files hipfort-rocm-6.0.2/test/f2003/vecadd/main and hipfort-rocm-6.0.2.new/test/f2003/vecadd/main differ
