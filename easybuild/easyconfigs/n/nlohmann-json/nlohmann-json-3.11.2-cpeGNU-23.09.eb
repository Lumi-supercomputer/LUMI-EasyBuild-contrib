# Based on a easyconfig by the Juelich Supercomputing Centre
# Adapted for LUMI by Orian Louant

easyblock = 'CMakeMake'

local_nlohmannjson_version = '3.11.2'        # https://github.com/nlohmann/json/releases

name =    'nlohmann-json'
version = local_nlohmannjson_version

homepage = "https://json.nlohmann.me/"

whatis = ['Description: nlohmann-json is JSON library for modern C++']

description = """
nlohmann-json is JSON library for modern C++ by Niels Lohmann. The design goals
are:
 
 - Intuitive syntax: in languages such as Python, JSON feels like a first class
   data type. We used all the operator magic of modern C++ to achieve the same
   feeling in your code.
 - Trivial integration. Our whole code consists of a single header file 
   json.hpp. That's it. No library, no subproject, no dependencies, no complex
   build system. The class is written in vanilla C++11. All in all, everything
   should require no adjustment of your compiler flags or project settings.
 - Serious testing. Our code is heavily unit-tested and covers 100% of the code,
   including all exceptional behavior. Furthermore, it's checked with Valgrind
   and the Clang Sanitizers that there are no memory leaks.
"""

docurls = ['https://json.nlohmann.me/']
software_license_urls = ['https://json.nlohmann.me/home/license/']

toolchain = {'name': 'cpeGNU', 'version': '23.09'}
toolchainopts = {'pic': True}

source_urls = ['https://github.com/nlohmann/json/archive']
sources =     ['v%(version)s.tar.gz']
checksums =   ['d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273']

builddependencies = [
    ('buildtools', '%(toolchain_version)s', '', True),
]

sanity_check_paths = {
    'files': [],
    'dirs':  [('include', 'lib64')]
}

moduleclass = 'devel''
