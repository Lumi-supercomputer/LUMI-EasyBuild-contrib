easyblock = 'PythonPackage'

name = 'h5py'
version = '3.7.0'
versionsuffix = '-parallel'

local_wheel_version = '0.37.1'

homepage = 'http://www.h5py.org/'

whatis = [
    'Description: the h5py package is a Pythonic interface to the HDF5 binary' 
    'data format.'
]

description = """
 The h5py package provides both a high- and low-level interface to the HDF5
 library from Python. The low-level interface is intended to be a complete
 wrapping of the HDF5 API, while the high-level component supports access to HDF5
 files, datasets and groups using established Python and NumPy concepts.

 A strong emphasis on automatic conversion between Python (Numpy) datatypes and
 data structures and their HDF5 equivalents vastly simplifies the process of
 reading and writing data from Python.
"""

docurls = ['https://docs.h5py.org/en/3.7.0/']
software_license_urls = ['https://github.com/h5py/h5py/blob/master/LICENSE']

toolchain = {'name': 'cpeAMD', 'version': '22.08'}
toolchainopts = {'usempi': True}

sources = [SOURCE_TAR_GZ]
checksums = ['3fcf37884383c5da64846ab510190720027dca0768def34dd8dcb659dbe5cbf3']

builddependencies = [
    ('wheel', local_wheel_version, '-cray-python%(pyshortver)s')
]

dependencies = [
    ('cray-python',        EXTERNAL_MODULE),
    ('cray-hdf5-parallel', EXTERNAL_MODULE),
]

use_pip = True
prebuildopts = preinstallopts = 'HDF5_MPI="ON" H5PY_SETUP_REQUIRES=0 '

# sanity checks (import h5py) fails on login nodes (MPI not available)
options = {'modulename': 'os'}

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%(pyshortver)s/site-packages/%(name)s']
}

moduleclass = 'data'
